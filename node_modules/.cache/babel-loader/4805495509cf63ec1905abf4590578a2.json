{"ast":null,"code":"const {\n  getyritykset\n} = require('../db/SQL');\n\nconst sql = require('../db/SQL');\n\nmodule.exports = {\n  fetch: async (req, res) => {\n    //Ekan version jäänteitä\n    console.log(\"fetch started ...\");\n\n    try {\n      let n = req.body;\n      console.log(\"body: \" + JSON.stringify(req.body));\n      let y = await sql.getYritys(n.nimi, n.ytunnus, n.selite); //let t = await sql.getTilaukset(y.id);\n\n      console.log(\"done\");\n      res.json({\n        status: \"OK\",\n        yritykset: y\n      });\n    } catch (err) {\n      res.json({\n        status: \"NOT OK\",\n        msg: err\n      });\n    }\n  },\n  fetchKaikki: async (req, res) => {\n    console.log(\"fetch started ...\");\n    console.log(req.query);\n    let n = req.query;\n    let toimialat = [];\n    let yritykset;\n\n    try {\n      toimialat = await sql.getToimialat();\n      console.log(\"Toimialat:\", toimialat);\n    } catch (e) {\n      console.log(\"ERROR: \", e);\n    }\n\n    try {\n      yritykset = await sql.getYritys(n.nimi, n.ytunnus, n.toimiala_id);\n      console.log(\"Yritykset:\", yritykset);\n    } catch (e) {\n      console.log(\"ERROR: \", e);\n    }\n\n    let empty = {\n      id: -1,\n      toimiala: \"Choose\"\n    };\n    res.render('index', {\n      title: \"Yritysten tiedot\",\n      toimialat: [empty, ...toimialat],\n      yritys: [...yritykset]\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/keijukoiso/Documents/Koulu/WEB/Mobiili/varasto/src/controllers/Controller.js"],"names":["getyritykset","require","sql","module","exports","fetch","req","res","console","log","n","body","JSON","stringify","y","getYritys","nimi","ytunnus","selite","json","status","yritykset","err","msg","fetchKaikki","query","toimialat","getToimialat","e","toimiala_id","empty","id","toimiala","render","title","yritys"],"mappings":"AACA,MAAM;AAAEA,EAAAA;AAAF,IAAmBC,OAAO,CAAC,WAAD,CAAhC;;AACA,MAAMC,GAAG,GAAGD,OAAO,CAAC,WAAD,CAAnB;;AAEAE,MAAM,CAACC,OAAP,GAAiB;AAEbC,EAAAA,KAAK,EAAE,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAAa;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;;AAEA,QAAI;AACA,UAAIC,CAAC,GAAGJ,GAAG,CAACK,IAAZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAWG,IAAI,CAACC,SAAL,CAAeP,GAAG,CAACK,IAAnB,CAAvB;AAEA,UAAIG,CAAC,GAAG,MAAMZ,GAAG,CAACa,SAAJ,CAAcL,CAAC,CAACM,IAAhB,EAAsBN,CAAC,CAACO,OAAxB,EAAiCP,CAAC,CAACQ,MAAnC,CAAd,CAJA,CAKA;;AAEAV,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AAEAF,MAAAA,GAAG,CAACY,IAAJ,CAAS;AAAEC,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,SAAS,EAAGP;AAA5B,OAAT;AACH,KAVD,CAWA,OAAOQ,GAAP,EAAY;AACRf,MAAAA,GAAG,CAACY,IAAJ,CAAS;AAACC,QAAAA,MAAM,EAAG,QAAV;AAAoBG,QAAAA,GAAG,EAAGD;AAA1B,OAAT;AACH;AACJ,GAnBY;AAqBbE,EAAAA,WAAW,EAAE,OAAOlB,GAAP,EAAYC,GAAZ,KAAoB;AAC7BC,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACmB,KAAhB;AACA,QAAIf,CAAC,GAAGJ,GAAG,CAACmB,KAAZ;AACA,QAAIC,SAAS,GAAG,EAAhB;AACA,QAAIL,SAAJ;;AACA,QAAI;AACAK,MAAAA,SAAS,GAAG,MAAMxB,GAAG,CAACyB,YAAJ,EAAlB;AACAnB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BiB,SAA1B;AACH,KAHD,CAIA,OAAME,CAAN,EACA;AACIpB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBmB,CAAvB;AACH;;AAED,QAAI;AACAP,MAAAA,SAAS,GAAG,MAAMnB,GAAG,CAACa,SAAJ,CAAcL,CAAC,CAACM,IAAhB,EAAsBN,CAAC,CAACO,OAAxB,EAAiCP,CAAC,CAACmB,WAAnC,CAAlB;AACArB,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BY,SAA1B;AACH,KAHD,CAIA,OAAMO,CAAN,EACA;AACIpB,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBmB,CAAvB;AACH;;AAED,QAAIE,KAAK,GAAG;AAACC,MAAAA,EAAE,EAAC,CAAC,CAAL;AAAQC,MAAAA,QAAQ,EAAG;AAAnB,KAAZ;AACAzB,IAAAA,GAAG,CAAC0B,MAAJ,CAAW,OAAX,EAAoB;AAChBC,MAAAA,KAAK,EAAE,kBADS;AAEhBR,MAAAA,SAAS,EAAG,CAACI,KAAD,EAAQ,GAAGJ,SAAX,CAFI;AAGhBS,MAAAA,MAAM,EAAG,CAAC,GAAGd,SAAJ;AAHO,KAApB;AAKH;AAnDY,CAAjB","sourcesContent":["\r\nconst { getyritykset } = require('../db/SQL');\r\nconst sql = require('../db/SQL');\r\n\r\nmodule.exports = {\r\n\r\n    fetch: async (req, res) => {            //Ekan version jäänteitä\r\n        console.log(\"fetch started ...\");\r\n\r\n        try {\r\n            let n = req.body;\r\n            console.log(\"body: \" + JSON.stringify(req.body));\r\n            \r\n            let y = await sql.getYritys(n.nimi, n.ytunnus, n.selite);\r\n            //let t = await sql.getTilaukset(y.id);\r\n            \r\n            console.log(\"done\")\r\n\r\n            res.json({ status: \"OK\", yritykset : y });\r\n        }\r\n        catch (err) {\r\n            res.json({status : \"NOT OK\", msg : err});\r\n        }\r\n    },\r\n\r\n    fetchKaikki: async (req, res) => {\r\n        console.log(\"fetch started ...\");\r\n        console.log(req.query);\r\n        let n = req.query;\r\n        let toimialat = [];\r\n        let yritykset;\r\n        try {        \r\n            toimialat = await sql.getToimialat();\r\n            console.log(\"Toimialat:\", toimialat);\r\n        }\r\n        catch(e)\r\n        {\r\n            console.log(\"ERROR: \", e)\r\n        }\r\n\r\n        try {\r\n            yritykset = await sql.getYritys(n.nimi, n.ytunnus, n.toimiala_id);\r\n            console.log(\"Yritykset:\", yritykset);\r\n        }\r\n        catch(e)\r\n        {\r\n            console.log(\"ERROR: \", e)\r\n        }\r\n\r\n        let empty = {id:-1, toimiala : \"Choose\" };\r\n        res.render('index', {\r\n            title: \"Yritysten tiedot\",\r\n            toimialat : [empty, ...toimialat],\r\n            yritys : [...yritykset]\r\n        });       \r\n    },\r\n\r\n\r\n}"]},"metadata":{},"sourceType":"module"}